{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://mkv-web/webpack/universalModuleDefinition","webpack://mkv-web/webpack/bootstrap","webpack://mkv-web/webpack/runtime/define property getters","webpack://mkv-web/webpack/runtime/get javascript chunk filename","webpack://mkv-web/webpack/runtime/hasOwnProperty shorthand","webpack://mkv-web/webpack/runtime/make namespace object","webpack://mkv-web/webpack/runtime/publicPath","webpack://mkv-web/webpack/runtime/jsonp chunk loading","webpack://mkv-web/./node_modules/comlink/dist/esm/comlink.mjs","webpack://mkv-web/./src/chunked-remuxer.ts","webpack://mkv-web/./src/mkv-web.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, function() {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".js\";\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/includes/\";","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t296: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","/**\r\n * Copyright 2019 Google Inc. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst proxyMarker = Symbol(\"Comlink.proxy\");\r\nconst createEndpoint = Symbol(\"Comlink.endpoint\");\r\nconst releaseProxy = Symbol(\"Comlink.releaseProxy\");\r\nconst throwMarker = Symbol(\"Comlink.thrown\");\r\nconst isObject = (val) => (typeof val === \"object\" && val !== null) || typeof val === \"function\";\r\n/**\r\n * Internal transfer handle to handle objects marked to proxy.\r\n */\r\nconst proxyTransferHandler = {\r\n    canHandle: (val) => isObject(val) && val[proxyMarker],\r\n    serialize(obj) {\r\n        const { port1, port2 } = new MessageChannel();\r\n        expose(obj, port1);\r\n        return [port2, [port2]];\r\n    },\r\n    deserialize(port) {\r\n        port.start();\r\n        return wrap(port);\r\n    },\r\n};\r\n/**\r\n * Internal transfer handler to handle thrown exceptions.\r\n */\r\nconst throwTransferHandler = {\r\n    canHandle: (value) => isObject(value) && throwMarker in value,\r\n    serialize({ value }) {\r\n        let serialized;\r\n        if (value instanceof Error) {\r\n            serialized = {\r\n                isError: true,\r\n                value: {\r\n                    message: value.message,\r\n                    name: value.name,\r\n                    stack: value.stack,\r\n                },\r\n            };\r\n        }\r\n        else {\r\n            serialized = { isError: false, value };\r\n        }\r\n        return [serialized, []];\r\n    },\r\n    deserialize(serialized) {\r\n        if (serialized.isError) {\r\n            throw Object.assign(new Error(serialized.value.message), serialized.value);\r\n        }\r\n        throw serialized.value;\r\n    },\r\n};\r\n/**\r\n * Allows customizing the serialization of certain values.\r\n */\r\nconst transferHandlers = new Map([\r\n    [\"proxy\", proxyTransferHandler],\r\n    [\"throw\", throwTransferHandler],\r\n]);\r\nfunction expose(obj, ep = self) {\r\n    ep.addEventListener(\"message\", function callback(ev) {\r\n        if (!ev || !ev.data) {\r\n            return;\r\n        }\r\n        const { id, type, path } = Object.assign({ path: [] }, ev.data);\r\n        const argumentList = (ev.data.argumentList || []).map(fromWireValue);\r\n        let returnValue;\r\n        try {\r\n            const parent = path.slice(0, -1).reduce((obj, prop) => obj[prop], obj);\r\n            const rawValue = path.reduce((obj, prop) => obj[prop], obj);\r\n            switch (type) {\r\n                case \"GET\" /* GET */:\r\n                    {\r\n                        returnValue = rawValue;\r\n                    }\r\n                    break;\r\n                case \"SET\" /* SET */:\r\n                    {\r\n                        parent[path.slice(-1)[0]] = fromWireValue(ev.data.value);\r\n                        returnValue = true;\r\n                    }\r\n                    break;\r\n                case \"APPLY\" /* APPLY */:\r\n                    {\r\n                        returnValue = rawValue.apply(parent, argumentList);\r\n                    }\r\n                    break;\r\n                case \"CONSTRUCT\" /* CONSTRUCT */:\r\n                    {\r\n                        const value = new rawValue(...argumentList);\r\n                        returnValue = proxy(value);\r\n                    }\r\n                    break;\r\n                case \"ENDPOINT\" /* ENDPOINT */:\r\n                    {\r\n                        const { port1, port2 } = new MessageChannel();\r\n                        expose(obj, port2);\r\n                        returnValue = transfer(port1, [port1]);\r\n                    }\r\n                    break;\r\n                case \"RELEASE\" /* RELEASE */:\r\n                    {\r\n                        returnValue = undefined;\r\n                    }\r\n                    break;\r\n                default:\r\n                    return;\r\n            }\r\n        }\r\n        catch (value) {\r\n            returnValue = { value, [throwMarker]: 0 };\r\n        }\r\n        Promise.resolve(returnValue)\r\n            .catch((value) => {\r\n            return { value, [throwMarker]: 0 };\r\n        })\r\n            .then((returnValue) => {\r\n            const [wireValue, transferables] = toWireValue(returnValue);\r\n            ep.postMessage(Object.assign(Object.assign({}, wireValue), { id }), transferables);\r\n            if (type === \"RELEASE\" /* RELEASE */) {\r\n                // detach and deactive after sending release response above.\r\n                ep.removeEventListener(\"message\", callback);\r\n                closeEndPoint(ep);\r\n            }\r\n        });\r\n    });\r\n    if (ep.start) {\r\n        ep.start();\r\n    }\r\n}\r\nfunction isMessagePort(endpoint) {\r\n    return endpoint.constructor.name === \"MessagePort\";\r\n}\r\nfunction closeEndPoint(endpoint) {\r\n    if (isMessagePort(endpoint))\r\n        endpoint.close();\r\n}\r\nfunction wrap(ep, target) {\r\n    return createProxy(ep, [], target);\r\n}\r\nfunction throwIfProxyReleased(isReleased) {\r\n    if (isReleased) {\r\n        throw new Error(\"Proxy has been released and is not useable\");\r\n    }\r\n}\r\nfunction createProxy(ep, path = [], target = function () { }) {\r\n    let isProxyReleased = false;\r\n    const proxy = new Proxy(target, {\r\n        get(_target, prop) {\r\n            throwIfProxyReleased(isProxyReleased);\r\n            if (prop === releaseProxy) {\r\n                return () => {\r\n                    return requestResponseMessage(ep, {\r\n                        type: \"RELEASE\" /* RELEASE */,\r\n                        path: path.map((p) => p.toString()),\r\n                    }).then(() => {\r\n                        closeEndPoint(ep);\r\n                        isProxyReleased = true;\r\n                    });\r\n                };\r\n            }\r\n            if (prop === \"then\") {\r\n                if (path.length === 0) {\r\n                    return { then: () => proxy };\r\n                }\r\n                const r = requestResponseMessage(ep, {\r\n                    type: \"GET\" /* GET */,\r\n                    path: path.map((p) => p.toString()),\r\n                }).then(fromWireValue);\r\n                return r.then.bind(r);\r\n            }\r\n            return createProxy(ep, [...path, prop]);\r\n        },\r\n        set(_target, prop, rawValue) {\r\n            throwIfProxyReleased(isProxyReleased);\r\n            // FIXME: ES6 Proxy Handler `set` methods are supposed to return a\r\n            // boolean. To show good will, we return true asynchronously ¯\\_(ツ)_/¯\r\n            const [value, transferables] = toWireValue(rawValue);\r\n            return requestResponseMessage(ep, {\r\n                type: \"SET\" /* SET */,\r\n                path: [...path, prop].map((p) => p.toString()),\r\n                value,\r\n            }, transferables).then(fromWireValue);\r\n        },\r\n        apply(_target, _thisArg, rawArgumentList) {\r\n            throwIfProxyReleased(isProxyReleased);\r\n            const last = path[path.length - 1];\r\n            if (last === createEndpoint) {\r\n                return requestResponseMessage(ep, {\r\n                    type: \"ENDPOINT\" /* ENDPOINT */,\r\n                }).then(fromWireValue);\r\n            }\r\n            // We just pretend that `bind()` didn’t happen.\r\n            if (last === \"bind\") {\r\n                return createProxy(ep, path.slice(0, -1));\r\n            }\r\n            const [argumentList, transferables] = processArguments(rawArgumentList);\r\n            return requestResponseMessage(ep, {\r\n                type: \"APPLY\" /* APPLY */,\r\n                path: path.map((p) => p.toString()),\r\n                argumentList,\r\n            }, transferables).then(fromWireValue);\r\n        },\r\n        construct(_target, rawArgumentList) {\r\n            throwIfProxyReleased(isProxyReleased);\r\n            const [argumentList, transferables] = processArguments(rawArgumentList);\r\n            return requestResponseMessage(ep, {\r\n                type: \"CONSTRUCT\" /* CONSTRUCT */,\r\n                path: path.map((p) => p.toString()),\r\n                argumentList,\r\n            }, transferables).then(fromWireValue);\r\n        },\r\n    });\r\n    return proxy;\r\n}\r\nfunction myFlat(arr) {\r\n    return Array.prototype.concat.apply([], arr);\r\n}\r\nfunction processArguments(argumentList) {\r\n    const processed = argumentList.map(toWireValue);\r\n    return [processed.map((v) => v[0]), myFlat(processed.map((v) => v[1]))];\r\n}\r\nconst transferCache = new WeakMap();\r\nfunction transfer(obj, transfers) {\r\n    transferCache.set(obj, transfers);\r\n    return obj;\r\n}\r\nfunction proxy(obj) {\r\n    return Object.assign(obj, { [proxyMarker]: true });\r\n}\r\nfunction windowEndpoint(w, context = self, targetOrigin = \"*\") {\r\n    return {\r\n        postMessage: (msg, transferables) => w.postMessage(msg, targetOrigin, transferables),\r\n        addEventListener: context.addEventListener.bind(context),\r\n        removeEventListener: context.removeEventListener.bind(context),\r\n    };\r\n}\r\nfunction toWireValue(value) {\r\n    for (const [name, handler] of transferHandlers) {\r\n        if (handler.canHandle(value)) {\r\n            const [serializedValue, transferables] = handler.serialize(value);\r\n            return [\r\n                {\r\n                    type: \"HANDLER\" /* HANDLER */,\r\n                    name,\r\n                    value: serializedValue,\r\n                },\r\n                transferables,\r\n            ];\r\n        }\r\n    }\r\n    return [\r\n        {\r\n            type: \"RAW\" /* RAW */,\r\n            value,\r\n        },\r\n        transferCache.get(value) || [],\r\n    ];\r\n}\r\nfunction fromWireValue(value) {\r\n    switch (value.type) {\r\n        case \"HANDLER\" /* HANDLER */:\r\n            return transferHandlers.get(value.name).deserialize(value.value);\r\n        case \"RAW\" /* RAW */:\r\n            return value.value;\r\n    }\r\n}\r\nfunction requestResponseMessage(ep, msg, transfers) {\r\n    return new Promise((resolve) => {\r\n        const id = generateUUID();\r\n        ep.addEventListener(\"message\", function l(ev) {\r\n            if (!ev.data || !ev.data.id || ev.data.id !== id) {\r\n                return;\r\n            }\r\n            ep.removeEventListener(\"message\", l);\r\n            resolve(ev.data);\r\n        });\r\n        if (ep.start) {\r\n            ep.start();\r\n        }\r\n        ep.postMessage(Object.assign({ id }, msg), transfers);\r\n    });\r\n}\r\nfunction generateUUID() {\r\n    return new Array(4)\r\n        .fill(0)\r\n        .map(() => Math.floor(Math.random() * Number.MAX_SAFE_INTEGER).toString(16))\r\n        .join(\"-\");\r\n}\n\nexport { createEndpoint, expose, proxy, proxyMarker, releaseProxy, transfer, transferHandlers, windowEndpoint, wrap };\n//# sourceMappingURL=comlink.mjs.map\n","import * as Comlink from 'comlink';\nimport type FFmpeg from './worker/ffmpeg';\n\nexport default function spawnFFmpegWorker(): Comlink.Remote<FFmpeg> {\n  const worker = new Worker(new URL(\"./worker/chunked-remuxer-worker.ts\", import.meta.url));\n  return Comlink.wrap(worker);\n}\n","import spawnFFmpegWorker from './chunked-remuxer';\nimport type { FFmpeg } from './worker/ffmpeg'\n\nexport default spawnFFmpegWorker\nexport { spawnFFmpegWorker }\n"],"names":["root","factory","exports","module","define","amd","a","i","self","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","chunkId","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","b","document","baseURI","location","href","proxyMarker","createEndpoint","releaseProxy","throwMarker","isObject","val","transferHandlers","Map","canHandle","serialize","port1","port2","MessageChannel","expose","deserialize","port","start","wrap","serialized","Error","isError","message","name","stack","assign","ep","addEventListener","callback","ev","data","id","type","path","argumentList","map","fromWireValue","returnValue","parent","slice","reduce","rawValue","apply","proxy","transfers","transferCache","set","transfer","undefined","Promise","resolve","catch","then","wireValue","transferables","toWireValue","postMessage","removeEventListener","closeEndPoint","endpoint","constructor","isMessagePort","close","target","createProxy","throwIfProxyReleased","isReleased","isProxyReleased","Proxy","_target","requestResponseMessage","p","toString","length","r","bind","_thisArg","rawArgumentList","last","processArguments","construct","processed","v","arr","Array","concat","WeakMap","handler","serializedValue","msg","fill","Math","floor","random","Number","MAX_SAFE_INTEGER","join","l","spawnFFmpegWorker","Worker","URL"],"sourceRoot":""}